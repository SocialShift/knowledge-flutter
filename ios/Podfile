# Uncomment this line to define a global platform for your project
platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  
  # Performance optimizations for iOS
  # Set compile flags for better performance
  post_install do |installer|
    installer.pods_project.targets.each do |target|
      flutter_additional_ios_build_settings(target)
      
      target.build_configurations.each do |config|
        # Fix for Flutter framework path issues
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] ||= []
        
        # Add standard Flutter framework paths
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "#{Pod::Config.instance.installation_root}/Pods/Flutter/engine"
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${PODS_CONFIGURATION_BUILD_DIR}/Flutter"
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${PODS_ROOT}/../Flutter"
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] << "${PODS_XCFRAMEWORKS_BUILD_DIR}/Flutter"
        
        # Fix for wakelock_plus plugin
        if target.name.start_with?('wakelock_plus')
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << "#{Pod::Config.instance.installation_root}/Pods/Flutter/engine"
          config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/../Flutter"
        end
        
        # Fix for video_player_avfoundation plugin
        if target.name.start_with?('video_player_avfoundation')
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << "#{Pod::Config.instance.installation_root}/Pods/Flutter/engine"
          config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/../Flutter"
        end
        
        # Enable bitcode for better performance
        config.build_settings['ENABLE_BITCODE'] = 'YES'
        
        # Set to device build architectures for release only
        config.build_settings['ONLY_ACTIVE_ARCH'] = config.name == 'Debug' ? 'YES' : 'NO'
        
        # Use new build system for better performance
        config.build_settings['SWIFT_VERSION'] = '5.0'
        
        # Set minimum deployment target to avoid warnings
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'
        
        # Optimize linking
        config.build_settings['DEAD_CODE_STRIPPING'] = 'YES'
        
        # Optimize build time
        config.build_settings['CLANG_ENABLE_MODULE_DEBUGGING'] = config.name == 'Debug' ? 'YES' : 'NO'
        
        # Enable strict compiler optimizations in Release mode
        if config.name == 'Release'
          config.build_settings['GCC_OPTIMIZATION_LEVEL'] = 's'
          config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'
          config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
          config.build_settings['ENABLE_NS_ASSERTIONS'] = 'NO'
        end
      end
    end
  end
end 